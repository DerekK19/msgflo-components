#!/bin/bash
# Start the components needed by msgflo, then start the package including the specified graph

# Derek Knight
# Jun 2019

debug_flag='false'
debug_file="tmp/debug.log"
graph_file="graphs/main.json"
verbose='false'
print_usage() {
  echo "Usage: '$0' -d -g <graph file>"
  echo " Parameters"
  echo "  -d              - Turn on debugging (default off)"
  echo "  -g <graph file> - Specify the graph file to use (default graphs\main.json)"
}

while getopts 'dg:v' flag; do
  case "${flag}" in
    d) debug_flag='true' ;;
    g) graph_file="${OPTARG}" ;;
    v) verbose='true' ;;
    *) print_usage
       exit 1 ;;
  esac
done

if [ ! -f "${graph_file}" ]; then
  echo "Graph file '${graph_file}' not found"
  exit 2
fi

export MSGFLO_BROKER="mqtt://pub_client:password@mqttserver"
export GRAPH="tmp/main.json"
if [ ${debug_flag} == 'true' ]; then
  export DEBUG="*"
fi

rm -f ${debug_file}
cp ${graph_file} ./tmp/main.json

processes=`ruby ./parse_components.rb ${graph_file}`

IFS_BAK=$IFS
IFS=$'\n'
for process in $processes; do
  eval $process 2>> ${debug_file} &
done
IFS=$IFS_BAK
IFS_BAK=

# Start npm, which will start msgflo and will register the components.
# Leave this running in the foreground. stop with Control-C, and that will also stop the components
npm start 2>> ${debug_file}
